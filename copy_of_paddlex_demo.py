# -*- coding: utf-8 -*-
"""Copy of paddlex_demo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oYFfazeSxUuv_x0iLDur4AmRqUi7JbpK
"""

import tensorflow as tf
device_name = tf.test.gpu_device_name()
if device_name != '/device:GPU:0':
  raise SystemError('GPU device not found')
print('Found GPU at: {}'.format(device_name))

!python --version

! wget https://bj.bcebos.com/paddlex/datasets/optic_disc_seg.tar.gz
! tar xzf optic_disc_seg.tar.gz

!python -m pip install paddlepaddle-gpu==2.2.0.post111 -f https://www.paddlepaddle.org.cn/whl/linux/mkl/avx/stable.html

import paddle
paddle.utils.run_check()

!python -m pip install paddlex==2.0.0 -i https://mirror.baidu.com/pypi/simple

!python -m pip install cython pycocotools

import os
os.environ['CUDA_VISIBLE_DEVICES'] = '0'
import paddlex as pdx
from paddlex import transforms as T
train_transforms = T.Compose([
    T.Resize(target_size=512),
    T.Normalize()
])
eval_transforms = T.Compose([
    T.Resize(target_size=512),
    T.Normalize()
])

train_dataset = pdx.datasets.SegDataset(
    data_dir='optic_disc_seg',
    file_list='optic_disc_seg/train_list.txt',
    label_list='optic_disc_seg/labels.txt',
    transforms=train_transforms,
    shuffle=True)
eval_dataset = pdx.datasets.SegDataset(
    data_dir='optic_disc_seg',
    file_list='optic_disc_seg/val_list.txt',
    label_list='optic_disc_seg/labels.txt',
    transforms=eval_transforms)

num_classes = len(train_dataset.labels)
model = pdx.seg.DeepLabV3P(num_classes=num_classes)

model.train(
    num_epochs=40,
    train_dataset=train_dataset,
    train_batch_size=1,
    eval_dataset=eval_dataset,
    save_interval_epochs=1,
    log_interval_steps=2,
    early_stop=True,
    early_stop_patience=5,
    save_dir='output/deeplab')